g = ggplot(mtcars, aes(x=factor(am), y=mpg))
g = g + geom_boxplot()
g = g + xlab("Automatic/Manual") + ylab("Miles Per Gallon")
g
fit1 = lm(mpg ~ cyl * factor(am), data = mtcars)
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3],
+                       slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g
fit1 = lm(mpg ~ hp * factor(am), data = mtcars)
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3],
+                       slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g
fit1 = lm(mpg ~ gear * factor(am), data = mtcars)
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3],
+                       slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g
fit1 = lm(mpg ~ carb * factor(am), data = mtcars)
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3],
+                       slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g
fit1 = lm(mpg ~ wt * factor(am), data = mtcars)
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3],
+                       slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g
fit2 <- lm(mpg ~ ., mtcars)
summary(fit2)
fit1 = lm(mpg ~ wt * factor(am), data = mtcars)
summary(fit1)
g = ggplot(mtcars, aes(x=factor(am), y=mpg))
g = g + geom_boxplot()
g = g + xlab("Automatic/Manual") + ylab("Miles Per Gallon")
g
summary(fit1)
summary(fit)
summary(fit0)
fit0 <- lm(mpg ~ ., mtcars)
summary(fit0)
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3],
+                       slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
+                       slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3],
+               slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2)
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3], slope = coef(fit1)[2] + coef(fit1)[4], size = 2)
g
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2, colour="blue")
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3], slope = coef(fit1)[2] + coef(fit1)[4], size = 2, colour="red")
g
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2, colour="red")
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3], slope = coef(fit1)[2] + coef(fit1)[4], size = 2, colour="blue")
g
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_smooth(model = "lm")
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2, colour="red")
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3], slope = coef(fit1)[2] + coef(fit1)[4], size = 2, colour="blue")
g
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g = g + geom_smooth(model = lm)
g = g + geom_abline(intercept = coef(fit1)[1], slope = coef(fit1)[2], size = 2, colour="red")
g = g + geom_abline(intercept = coef(fit1)[1] + coef(fit1)[3], slope = coef(fit1)[2] + coef(fit1)[4], size = 2, colour="blue")
g
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ wt | as.factor(am), data = mtcars, panel = panel.smooth, rows = 1)
data(mtcars)
summary(mtcars)
g = ggplot(mtcars, aes(x=factor(am), y=mpg))
g = g + geom_boxplot()
g = g + xlab("Automatic/Manual") + ylab("Miles Per Gallon")
g
?mtcars
library(UsingR)
library(ggplot2)
data(mtcars)
str(mtcars)
fit0 <- lm(mpg ~ ., mtcars)
summary(fit0)$coef
fit0 <- lm(mpg ~ ., mtcars)
summary(fit0)
fit1 = lm(mpg ~ wt * factor(am), data = mtcars)
summary(fit1)
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ wt | as.factor(am), data = mtcars, panel = panel.smooth, rows = 1)
pairs(mtcars, main = "mtcars data")
vif(fit0)
library(car)
install.packages("car")
library(car)
vif(fit0)
sqrt(vif(fit0))
fit7 <- lm(mpg ~ wt + factor(am), data = mtcars)
fit8 <- lm(mpg ~ wt + hp + factor(am), data = mtcars)
fit8 <- lm(mpg ~ wt + qsec + factor(am), data = mtcars)
fit9 <- lm(mpg ~ wt + qsec + hp + factor(am), data = mtcars)
annova(fit7, fit8, fit9)
anova(fit7, fit8, fit9)
library(UsingR)
library(ggplot2)
library(car)
data(mtcars)
fit0 <- lm(mpg ~ ., mtcars)
summary(fit0)$coef
fit7 <- lm(mpg ~ wt + factor(am), data = mtcars)
fit8 <- lm(mpg ~ wt + qsec + factor(am), data = mtcars)
fit9 <- lm(mpg ~ wt + qsec + hp + factor(am), data = mtcars)
anova(fit7, fit8, fit9)
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g
g = ggplot(mtcars, aes(x=wt, y=mpg, facet = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g
g = ggplot(mtcars, aes(x=wt, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g
g = g + geom_smooth()
g
g = g + geom_smooth(method = lm)
g
fit1 <- lm(mpg ~ wt + factor(am), data = mtcars)
fit2 <- lm(mpg ~ wt + qsec + factor(am), data = mtcars)
fit3 <- lm(mpg ~ wt + qsec + hp + factor(am), data = mtcars)
anova(fit1, fit2, fit3)
summary(fit1)$coef
summary(fit2)$coef
summary(fit3)$coef
g = ggplot(mtcars, aes(x=qsec, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g
g = ggplot(mtcars, aes(x=hp, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g
g = ggplot(mtcars, aes(x=qsec, y=mpg, colour = factor(am)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("Weight") + ylab("Miles Per Gallon")
g
summary(fit2)
fit4 <- lm(mpg ~ wt + qsec + hp + disp + factor(am), data = mtcars)
anova(fit1, fit2, fit3, fit4)
fit2 <- lm(mpg ~ wt + hp + factor(am), data = mtcars)
fit3 <- lm(mpg ~ wt + hp + qsec + factor(am), data = mtcars)
anova(fit1, fit2, fit3)
fit2 <- lm(mpg ~ wt + factor(am) + hp, data = mtcars)
fit3 <- lm(mpg ~ wt + factor(am) + hp + disp, data = mtcars)
fit4 <- lm(mpg ~ wt + factor(am) + hp + disp + qsec, data = mtcars)
anova(fit1, fit2, fit3, fit4)
fit4 <- lm(mpg ~ wt + factor(am) + hp + qsec, data = mtcars)
anova(fit1, fit2, fit3, fit4)
summary(fit2)
fit1 <- lm(mpg ~ factor(am) + wt, data = mtcars)
fit2 <- lm(mpg ~ factor(am) + wt + hp, data = mtcars)
fit3 <- lm(mpg ~ factor(am) + wt + hp + disp, data = mtcars)
fit4 <- lm(mpg ~ factor(am) + wt + hp + disp + qsec, data = mtcars)
anova(fit1, fit2, fit3, fit4)
summary(fit2)
library(UsingR)
library(ggplot2)
library(car)
data(mtcars)
fit <- lm(mpg ~ factor(cyl), mtcars)
summary(fit)
fit <- lm(mpg ~ factor(cyl) * wt, mtcars)
summary(fit)
fit <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit)
fit <- lm(mpg ~ factor(cyl):wt, mtcars)
summary(fit)
fit <- lm(mpg ~ factor(cyl) + wt, mtcars)
fit <- lm(mpg ~ factor(cyl) : wt, mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt, mtcars)
anova(fit, fit2)
fit <- lm(mpg ~ factor(cyl) + wt + factor(cyl):wt, mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt, mtcars)
anova(fit, fit2)
anova(fit2, fit)
summary(fit)
fit2 <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit2)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
lm(y~x)
summary(lm(y~x))
plot(fit)
fit3 <- (lm(y~x))
hatvalues(fit3)
g <- ggplot(aes(x,y))
plot(y,x)
plot(x,y)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit4 <- lm(y~x)
dfbeta(fit4)
hatvalue(fit4)
hatvalues(fit4)
dfbeta(fit4)$coef
dfbetas(fit4)
anova(fit, fit2)
summary(fit)
fit5 <- lm(mpg ~ factor(cyl) + factor(cyl):wt)
fit5 <- lm(mpg ~ factor(cyl) + factor(cyl):wt, mtcars)
summary(fit5)
library(UsingR)
library(ggplot2)
library(car)
data(mtcars)
fit1 <- lm(mpg ~ factor(am) + wt, data = mtcars)
fit2 <- lm(mpg ~ factor(am) + wt + factor(cyl), data = mtcars)
fit3 <- lm(mpg ~ factor(am) + wt + factor(cyl) + disp, data = mtcars)
fit4 <- lm(mpg ~ factor(am) + wt + factor(cyl) +disp + hp, data = mtcars)
anova(fit1, fit2, fit3, fit4)
anova(fit1, fit4)
anova(fit1, fit3)
anova(fit1, fit2)
summary(fit2)$coef
fit5 <- lm(mpg ~ factor(am) + wt + disp + hp, data = mtcars)
anova(fit1, fit2, fit5)
anova(fit1, fit5, fit2)
anova(fit1, fit5)
summary(fit5)$coef
fit6 <- lm(mpg ~ factor(am) + wt + hp, data = mtcars)
anova(fit1, fit6)
summary(fit6)$coef
fit7 <- lm(mpg ~ factor(am) + wt + hp + disp, data = mtcars)
anova(fit1, fit6, fit7)
anova(fit1, fit7)
swirl()
library(swirl)
swirl()
library(MASS)
?shuttle
logUse <- glm(shuttle$use ~ shuttle$wind, family="binomial")
summary(logUse)
exp(logUse$coeff)
exp(confint(logUse)
)
anova(logUse, test="Chisq")
logUse2 <- glm(shuttle$use ~ shuttle$wind + shuttle$mgn, family="binomial")
logUse2 <- glm(shuttle$use ~ shuttle$wind + shuttle$magn, family="binomial")
exp(logUse2$coeff)
summary(logUse2)
logUse3 <- glm(1 - shuttle$use ~ shuttle$wind, family="binomial")
logUse3 <- glm(1 - shuttle$use ~ shuttle$wind, family="binary")
poi <- glm()
data(InsetSprays)
library(data)
InsectSprays
str(InsectSprays)
poi <- glm(count ~ spray, family="poisson", InsectSprays)
exp(poi$coeff)
log(10)
log(10) + 10
log(10) + 20
offset(log(10))
offset(log(10) +10)
offset(log(10) +20)
poi2 <- glm(count ~ spray + 2.3, family="poisson", InsectSprays)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
library(swirl)
swirl()
fit <- lm(Y ~ x, out2)
fit <- lm(y ~ x, out2)
plot(fit, which=)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which=1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma
sigma <- fit$rsquare
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
dy/2*sigma^2
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
library(kernlab)
library(kernlabs)
install.packages("kernlab")
library(kernlab)
str(spam)
data
env
data(spam)
str(spam)
install.packages("caret")
library(caret)
library(caret)
library(kernlab)
data(spam)
inTrain <- createDataPartition(y=spam$type, p=0.75, list=FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
dim(training)
modelFit <- train(type ~.,data=training, method="glm")
set.seed(32343)
modelFit <- train(type ~.,data=training, method="glm")
modelFit
modelFit <- train(type ~.,data=training, method="glm")
install.packages('caret', dependencies = TRUE)
install.packages("caret", dependencies = TRUE)
set.seed(32343)
modelFit <- train(type ~.,data=training, method="glm")
library(caret)
set.seed(32343)
modelFit <- train(type ~.,data=training, method="glm")
modelfit
modelFit
modelFit$finalModel
predictions <- predict(modelFit,newdata=testing)
predictions
confusionMatrix(predictions,testing$type)
set.seed(32323)
folds <- createFolds(y=spam$type,k=10,
list=TRUE,returnTrain=TRUE)
sapply(folds,length)
folds[[1]][1:10]
set.seed(32323)
folds <- createFolds(y=spam$type,k=10,
list=TRUE,returnTrain=FALSE)
sapply(folds,length)
folds[[1]][1:10]
set.seed(32323)
folds <- createResample(y=spam$type,times=10,
list=TRUE)
sapply(folds,length)
folds[[1]][1:10]
set.seed(32323)
tme <- 1:1000
folds <- createTimeSlices(y=tme,initialWindow=20,
horizon=10)
names(folds)
folds$train[[1]]
folds$test[[1]]
install.packages("ISLR")
library(ISLR)
library(ggplot2)
data(Wages)
data(Wage)
str(Wage)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
myplot
myPlot
data(mtcars)
str(mtcars)
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
require(devtools)
data(airquality)
str(airquality)
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
airquality
head(airquality)
d <- data.frame(airquality, stringsAsFactors = FALSE)
print(d)
library(rCharts)
install.packages("rCharts")
install_github('rCharts', 'ramnathv')
install_github('rCharts', 'ramnathv/rCharts')
install_github('ramnathv/rCharts')
library(rCharts)
install_github('ramnathv/slidify')
install.packages("RCurl")
library(rCurl)
library(RCurl)
install_github('ramnathv/rCharts')
install_github('ramnathv/slidify')
library(devTools)
require(devtools)
install_github('ramnathv/rCharts')
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library(rChart)
library(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
data(mtcars)
str(mtcars)
fit <- train(mpg ~ wt, hp, data=mtcars, method="lm")
library(caret)
library(caret)
library(kernlab)
fit <- train(mpg ~ wt, hp, data=mtcars, method="lm")
fit <- train(mpg ~ wt, data=mtcars, method="lm")
fit
pred <- predict(fit, mewdata=5)
pred <- predict(fit, 5)
pred <- predict(fit, wt=5)
data(mtcars)
str(mtcars)
d <- mtcars[ , c("mpg", "hp", "wt")]
str(d)
fit <- lm(mpg ~ ., dm)
fit <- lm(mpg ~ ., d)
summary(fit)$coef
summary(fit)
d2 <- data.frame(mean(d$hp),mean(d$wt))
d2
pred <- predict(fit,newdata=d2)
d2.colnames <- c("hp","wt")
d2
colnames(d2) <- c("hp","wt")
d2
pred <- predict(fit,newdata=d2)
pred
d2$wt <-5
d2
pred <- predict(fit,newdata=d2)
pred
dt$hp <- 180
d2$hp <- 180
d2
pred <- predict(fit,newdata=d2)
pred
library(slidify)
browseURL("index.html")
getwd()
setwd("C:/Users/kwkaufma/Documents/Training/Coursera/Developing Data Products")
list.files()
setwd("./MPG_APP")
list.files()
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
data(mtcars)
str(mtcars)
names(mtcars)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
plot(x, y, pch = 16, col="blue", xlab="mpg", ylab="wt")
plot(mpg, wt, pch = 16, col="blue", xlab="mpg", ylab="wt")
plot(mtcars$mpg, mtcars$wt, pch = 16, col="blue", xlab="mpg", ylab="wt")
slidify("index.Rmd")
browseURL("index.html")
